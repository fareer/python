#coding=utf-8
#!/usr/bin/python

import threading
import time
import requests
import re
import queue

exitFlag = 0
headers = {"User-Agent":"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)"}

class myThread (threading.Thread):   #继承父类threading.Thread
    def __init__(self, threadID, name, counter):
        threading.Thread.__init__(self)
        self.name = name

    def run(self):           #把要执行的代码写到run函数里面 线程在创建后会直接运行run函数
        for i in range(1, 17):
            get_url = 'http://www.anquan.us/search?keywords=' + self.name + '&&content_search_by=by_bugs&&search_by_html=False&&page=' + str(
                i)
            print("正在爬去第%d页" % i)

            req = requests.get(get_url, headers=headers)
            result = re.findall(r'k\">\s(.*?)</a>', req.text, re.S)
            with open(r"C:\Users\76754\Desktop\picture\aaa.txt", "a", ) as f:
                for x in result:
                    f.write(x + '\n')
def process_data(threadName, q):
    while not exitFlag:
        queueLock.acquire()
        if not workQueue.empty():
            data = q.get()
            queueLock.release()
            print ("%s processing %s" % (threadName, data))
        else:
            queueLock.release()
        time.sleep(1)



threadList = ["Thread-1", "Thread-2", "Thread-3","Thread-4","Thread-5"]
nameList = ["cms", "内容管理", "新浪", "腾讯", "虎扑"]
queueLock = threading.Lock()
workQueue = queue.Queue(10)
threads = []
threadID = 1

# 创建新线程
for tName in threadList:
    thread = myThread(threadID, tName, workQueue)
    thread.start()
    threads.append(thread)
    threadID += 1

# 填充队列
queueLock.acquire()
for word in nameList:
    workQueue.put(word)
queueLock.release()


# 等待所有线程完成
for t in threads:
    t.join()
print ("Exiting Main Thread")
